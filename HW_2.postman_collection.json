{
	"info": {
		"_postman_id": "60ce8632-a507-4fb2-886c-5ab49e2d75ac",
		"name": "New Collection HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include",
							"    (\"str\",);",
							"});",
							"",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method\n?name=str&age=int",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"",
						"get_method\n"
					],
					"query": [
						{
							"key": "name",
							"value": "str"
						},
						{
							"key": "age",
							"value": "int"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Alex\");   ",
							"});",
							" //Спарсить response body в json.",
							"",
							"var jsonData = pm.response.json();",
							"",
							" // Проверить, что name, age, salary в ответе равно  request (name вбить руками.)",
							"",
							"pm.test(\"Chek name\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Alex\");",
							"});",
							"",
							"pm.test(\"Chek age\", function () {",
							"    pm.expect(jsonData.age).to.eql(null);",
							"});",
							"",
							"pm.test(\"Chek salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql(4000);",
							"});",
							"",
							"//Вывести в консоль параметр salary из response.",
							"",
							"let resp_name = jsonData.name",
							"console.log(\"resp_name = \" + resp_name)",
							"",
							"let resp_salary = jsonData.salary",
							"console.log(\"resp_salary = \" + resp_salary)",
							"",
							"",
							"//Вывести в консоль",
							"console.log(\"jsonData = \", jsonData)",
							"",
							"//7. Спарсить request.",
							"",
							" var request = request.data; ",
							"",
							" console.log(\"request =\", request)",
							"",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"",
							"pm.test(\"Chek name\", function () {",
							"    pm.expect(jsonData.name).to.eql(request.name);",
							"});",
							"",
							"pm.test(\"Chek age\", function () {",
							"    pm.expect(jsonData.age).to.eql( + request.age);",
							"});",
							"",
							"pm.test(\"Chek salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql( + request.salary);",
							"});",
							"",
							"//Вывести в консоль параметр family из response.",
							"console.log(\"salary = \", jsonData.salary)",
							"",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"",
							"pm.test(\"Chek salary_1_5_year\", function () {",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql( + request.salary *4);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "age ",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "4000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=Anna&age=35&weight=59",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Anna"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "weight",
							"value": "59"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Anna&age=35&salary=2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Anna"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"//1. Отправить запрос.",
							"//2. Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//3. Спарсить response body в json.",
							"",
							"var jsonData = pm.response.json();",
							"",
							"//4. Спарсить request.",
							"",
							" let req = pm.request.url.query.toObject();",
							"",
							" //Проверить, что name,age, salary в ответе равно s request ( забрать из request.)",
							"",
							"pm.test(\"Test name\", function () {",
							"    pm.expect(jsonData.name).to.eql(req.name);",
							"});",
							"",
							"pm.test(\"Test salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);",
							"});",
							" ",
							"pm.test(\"Test age\", function () {",
							"    pm.expect(jsonData.age).to.eql(req.age);",
							"});",
							"//8. Вывести в консоль параметр family из response.",
							"",
							"console.log(\"family = \",jsonData.family)",
							"",
							"",
							"",
							"//9. Проверить, что у параметра dog есть параметры name.",
							"console.log(jsonData.family.pets.dog)",
							"",
							"",
							"pm.test(\"Chek dog have name\", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");",
							"});",
							"",
							"pm.test(\"Chek dog name  \", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.haveOwnProperty('name');",
							"    });",
							"//10. Проверить, что у параметра dog есть параметры age.",
							"",
							"pm.test(\"Chek dog have age\", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");",
							"});",
							"//11. Проверить, что параметр name имеет значение Luky.",
							"pm.test(\"Chek dog have name Luky\", function () {",
							"    pm.expect(jsonData.family.pets.dog.name).to.include(\"Luky\");",
							"});",
							"",
							"    //12. Проверить, что параметр age имеет значение 4.",
							"",
							"pm.test(\"Chek dog  age 4\", function () {",
							"    pm.expect(jsonData.family.pets.dog.age).to.be.oneOf([4]);",
							"    });",
							"",
							" pm.test(\"Chek cat have name\", function () {",
							"    pm.expect(jsonData.family.pets.cat).to.have.any.keys(\"name\");",
							"     });   ",
							"pm.test(\"Chek cat have age\", function () {",
							"    pm.expect(jsonData.family.pets.cat.age).to.be.oneOf([3]);",
							"     });   ",
							"",
							"pm.test(\"Chek cat have name Sunny\", function () {",
							"    pm.expect(jsonData.family.pets.cat.name).to.be.oneOf(['Sunny']);",
							"     });  ",
							"",
							"       ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Anna&age=100&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Anna"
						},
						{
							"key": "age",
							"value": "100"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр  из окружения в request",
							"// написать параметр{{... }} в Body(Params), Value",
							"",
							"//5. Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"//Спарсить response body в json.",
							" var jsonData = pm.response.json();",
							"",
							"pm.test(\"check name\", function () {",
							"    pm.expect(jsonData.person.u_name[0]).to.eql(\"Shaurma\");",
							"});",
							"//Спарсить request.",
							"",
							"var request = request.data;",
							"console.log(\"request = \", request); ",
							"",
							"// Проверить, что json response имеет параметр start_qa_salary",
							"pm.test(\"Chek start_qa_salary\", function () {",
							"    pm.expect(jsonData).to.have.any.keys(['start_qa_salary']);",
							"     });  ",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months",
							"pm.test(\"Chek qa_salary_after_6_months\", function() {pm.expect(jsonData).to.have.any.keys(['qa_salary_after_6_months']);",
							"});",
							"//Проверить, что json response имеет параметр qa_salary_after_12_months",
							"pm.test(\"Chek qa_salary_after_12_months\", function() {pm.expect(jsonData).to.have.any.keys(['qa_salary_after_12_months']);",
							"});",
							"",
							"// Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)",
							"",
							"pm.test(\"Chek qa_salary_after_1.5_year \", function() {pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(+request.salary *3.3);",
							"});",
							"",
							"pm.test(\"Chek qa_salary_after_3.5_year \", function() {pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(+request.salary *3.8);",
							"});",
							"//Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)",
							"pm.test(\"Chek u_name[1] \", function() {",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+request.salary);",
							"});",
							"//Проверить, что что параметр u_age равен age из request (age забрать из request.)",
							"",
							"pm.test(\"Chek u_age \", function() {",
							"    pm.expect(jsonData.person.u_age).to.eql(+request.age);",
							"});",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)",
							"pm.test(\"Chek u_salary_5_years\", function() {",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+request.salary *4.2);",
							"});",
							"//***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
							"",
							"var person = jsonData.person",
							"console.log(person) ",
							"",
							"",
							"//for (var i=0; i < person.length; i++){",
							" //   console.log(person[i])",
							"//}",
							"",
							"for (i in person){",
							"   console.log(i + '=' + person[i])",
							" }",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name_4}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_4}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary_4}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Alex\");   ",
							"});",
							" //Спарсить response body в json.",
							"",
							"var jsonData = pm.response.json();",
							"",
							" // Проверить, что name, age, salary в ответе равно  request (name вбить руками.)",
							"",
							"pm.test(\"Chek name\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Anna\");",
							"});",
							"",
							"pm.test(\"Chek age\", function () {",
							"    pm.expect(jsonData.age).to.eql(null);",
							"});",
							"",
							"pm.test(\"Chek salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql(4000);",
							"});",
							"",
							"//Вывести в консоль параметр salary из response.",
							"",
							"let resp_name = jsonData.name",
							"console.log(\"resp_name = \" + resp_name)",
							"",
							"let resp_salary = jsonData.salary",
							"console.log(\"resp_salary = \" + resp_salary)",
							"",
							"",
							"//Вывести в консоль",
							"console.log(\"jsonData = \", jsonData)",
							"",
							"//Спарсить request ",
							"",
							"var request = request.data ",
							"",
							"console.log(\"request.data = \", request)",
							"",
							"//роверить, что name в ответе равно name s request (name забрать из request.)",
							"",
							"pm.test(\"chek age\", function () {",
							"    pm.expect(jsonData.age).to.eql(request.age);",
							"});",
							"",
							"pm.test(\"chek name\", function () {",
							"    pm.expect(jsonData.name).to.eql(request.name);",
							"});",
							"",
							"pm.test(\"chek salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql( + request.salary)",
							"});",
							"",
							"let resp_family = jsonData.family",
							"console.log(\"resp_family = \", resp_family)",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"",
							"pm.test(\"chek salary_1_5_year\", function () {",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql( + request.salary *4);",
							"});",
							"",
							"console.log(\"request.salary = \", +request.salary *4)",
							"",
							"console.log(jsonData.family.u_salary_1_5_year)",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Anna",
							"type": "text"
						},
						{
							"key": "age ",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "4000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Спарсить response body в json.",
							"var jsonData = pm.response.json();",
							"",
							"// Спарсить request.",
							"var req = pm.request.url.query.toObject();",
							"",
							"console.log(jsonData)",
							"console.log(req)",
							"",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Check name\", function () {",
							"    pm.expect(jsonData.name).to.eql(req.name);",
							"});",
							"",
							"//Проверить, что age в ответе равно age из request (age забрать из request.)",
							"pm.test(\"Check age\", function () {",
							"    pm.expect(jsonData.age).to.eql(+req.age);",
							"});",
							"",
							"// Вывести в консоль параметр salary из request.",
							"console.log('salary = ', req.salary)",
							"",
							"// Вывести в консоль параметр salary из response.",
							"console.log('response_salary =', jsonData.salary)",
							"",
							"//Вывести в консоль 0-й элемент параметра salary из response.",
							"//Вывести в консоль 1-й элемент параметра salary  из response",
							"//Вывести в консоль 2-й элемент параметра  salary из response.",
							"console.log('response_salary_0) =', jsonData.salary[0])",
							"console.log('response_salary_1 =', jsonData.salary[1])",
							"console.log('response_salary_2 =', jsonData.salary[2])",
							"",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)",
							"// Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)",
							"pm.test(\"Check salary_0\", function () {",
							"    pm.expect(jsonData.salary[0]).to.eql(+req.salary);",
							"});",
							"pm.test(\"Check salary_1\", function () {",
							"    pm.expect(+jsonData.salary[1]).to.eql(req.salary*2);",
							"});",
							"pm.test(\"Check salary_2\", function () {",
							"    pm.expect(+jsonData.salary[2]).to.eql(req.salary*3);",
							"});",
							"// Передать в окружение переменную name",
							"// Передать в окружение переменную age",
							"// Передать в окружение переменную salary",
							"pm.environment.set(\"salary_1\", req.salary);",
							"pm.environment.set(\"age_1\", jsonData.age);",
							"pm.environment.set(\"name_1\", jsonData.name);",
							"",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.",
							"",
							"var salary = jsonData.salary;",
							"",
							"",
							"for (var i=0; i < salary.length; i++){",
							"    console.log(salary[i])",
							"}",
							"for (var i of salary){",
							"    console.log('salary =',i)",
							"}",
							"",
							"for (i in salary){",
							"   console.log(salary[i])",
							" }",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Shaurma&age=16&salary=200",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Shaurma"
						},
						{
							"key": "age",
							"value": "16"
						},
						{
							"key": "salary",
							"value": "200"
						}
					]
				}
			},
			"response": []
		}
	]
}